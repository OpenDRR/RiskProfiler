version: '3.9'

services:
  wordpress:
    image: wordpress:5.8.1      # https://hub.docker.com/_/wordpress/
    ports:
      - ${IP}:${WP_PORT}:80
    user: "${DOCKER_WP_UID_GID-33:33}"
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html  # Full WordPress project
      - ./static-files:/var/www/html/site/assets/plugins/simply-static/static-files
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    networks:
      default:
        aliases:
          - riskprofiler.demo
    depends_on:
      - db
    links:
      - db

  wpcli:
    image: wordpress:cli-2.6.0  # https://hub.docker.com/_/wordpress/
    user: "${DOCKER_WP_UID_GID-33:33}"
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html
      - ./static-files:/var/www/html/site/assets/plugins/simply-static/static-files
      - ./db-backup:/usr/src/db-backup
      - ./bin/wait-for-it.sh:/usr/local/bin/wait-for-it
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    depends_on:
      - db
      - wordpress
    command: >
      sh -c 'echo "Waiting for the db container to be ready...";
        bash /usr/local/bin/wait-for-it db:3306 -t 60;
        if ! wp core is-installed; then
          echo "Importing WordPress database for RiskProfiler...";
          wp db import /usr/src/db-backup/wp_habitatseven_riskprofiler.sql;
        else
          echo "WordPress database was previously installed, skipping import."
        fi;
        if [[ -n $WP_ADMIN_USER && -n $WP_ADMIN_EMAIL && -n $WP_ADMIN_PASSWORD ]]; then
          echo "Creating WordPress admin user \"${WP_ADMIN_USER}\"..."
          wp user create "${WP_ADMIN_USER}" "${WP_ADMIN_EMAIL}" --role=administrator --user_pass="${WP_ADMIN_PASSWORD}";
          echo "Updating admin email address to \"${WP_ADMIN_EMAIL}\"...";
          wp option update admin_email "${WP_ADMIN_EMAIL}";
        else
          echo "Warning: WP_ADMIN_{USER,EMAIL,PASSWORD} not defined.";
          echo "         WordPress admin user not automatically created.";
          echo "See";
          echo "https://developer.wordpress.org/cli/commands/user/create/WordPress";
        fi;
        echo "To enter the WP-CLI container, run:";
        echo "    docker exec -it riskprofiler-cms_wpcli_1 /bin/bash";
        sleep infinity'

  pma:
    image: phpmyadmin:5.1.3     # https://hub.docker.com/_/phpmyadmin/
    environment:
      # https://docs.phpmyadmin.net/en/latest/setup.html#docker-environment-variables
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    ports:
      - ${IP}:${PMA_PORT}:80
    links:
      - db:db

  db:
    image: mysql:8.0.28         # https://hub.docker.com/_/mysql/
    # image: mariadb:10.7.3     # https://hub.docker.com/_/mariadb/
    ports:
      - ${IP}:${DB_PORT}:3306
    # Fix "mbind: Operation not permitted"
    # See https://stackoverflow.com/questions/55559386/how-to-fix-mbind-operation-not-permitted-in-mysql-error-log
    cap_add:
      - SYS_NICE
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"

volumes:
  wordpress_data:
  db_data:
